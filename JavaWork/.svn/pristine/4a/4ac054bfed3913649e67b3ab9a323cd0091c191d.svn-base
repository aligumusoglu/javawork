/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hasanunlukilinc.sms.entities;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 *
 * @author gngnew
 * @author hasan
 */
@Entity
@Table(name = "income_receivable")
@NamedQueries({@NamedQuery(name = "IncomeReceivable.findAll", query = "SELECT i FROM IncomeReceivable i")})
@SequenceGenerator(name = "seq_incomereceivable_id", sequenceName = "seq_incomereceivable_id", allocationSize = 1)
public class IncomeReceivable extends BaseEntity implements Serializable
{
	private static final long	serialVersionUID	= 1L;
	@Id
	@Basic(optional = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_incomereceivable_id")
	@Column(name = "id")
	private Long				id;

	@Column(name = "price")
	private Double				price;

	@Column(name = "receivable_id")
	private Long				receivableId;

	@Column(name = "income_id")
	private Long				incomeId;

	@Basic(optional = false)
	@Column(name = "pay_date")
	@Temporal(TemporalType.DATE)
	private Date				payDate;

	@JoinColumn(name = "receivable_id", referencedColumnName = "id", nullable = true, insertable = false, updatable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Receivable			receivable;

	@JoinColumn(name = "income_id", referencedColumnName = "id", nullable = true, insertable = false, updatable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Income				income;

	public IncomeReceivable()
	{
	}

	public IncomeReceivable(Long id)
	{
		this.id = id;
	}

	public Long getId()
	{
		return id;
	}

	public void setId(Long id)
	{
		this.id = id;
	}

	public Double getPrice()
	{
		return price;
	}

	public void setPrice(Double price)
	{
		this.price = price;
	}

	public Long getReceivableId()
	{
		return receivableId;
	}

	public void setReceivableId(Long receivableId)
	{
		this.receivableId = receivableId;
	}

	public Long getIncomeId()
	{
		return incomeId;
	}

	public void setIncomeId(Long incomeId)
	{
		this.incomeId = incomeId;
	}

	public Receivable getReceivable()
	{
		return receivable;
	}

	public void setReceivable(Receivable receivable)
	{
		this.receivable = receivable;
	}

	public Income getIncome()
	{
		return income;
	}

	public void setIncome(Income income)
	{
		this.income = income;
	}

	public Date getPayDate()
	{
		return payDate;
	}

	public void setPayDate(Date payDate)
	{
		this.payDate = payDate;
	}

	@Override
	public int hashCode()
	{
		int hash = 0;
		hash += (id != null ? id.hashCode() : 0);
		return hash;
	}

	@Override
	public boolean equals(Object object)
	{
		// TODO: Warning - this method won't work in the case the id fields are not set
		if (!(object instanceof IncomeReceivable))
		{
			return false;
		}
		IncomeReceivable other = (IncomeReceivable)object;
		if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)))
		{
			return false;
		}
		return true;
	}

	@Override
	public String toString()
	{
		return "com.hasanunlukilinc.sms.entities.IncomeReceivable[ id=" + id + " ]";
	}

}
