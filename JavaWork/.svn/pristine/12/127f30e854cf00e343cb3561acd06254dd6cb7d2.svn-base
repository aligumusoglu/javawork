/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.hasanunlukilinc.sms.entities;

import com.hasanunlukilinc.sms.application.HouseType;
import java.io.Serializable;
import java.util.List;
import javax.persistence.Basic;
import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.OneToMany;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;

/**
 *
 * @author gngnew
 */
@Entity
@Table(name = "house")
@NamedQueries({
    @NamedQuery(name = "House.findAll", query = "SELECT h FROM House h")})
@SequenceGenerator(name = "seq_house_id", sequenceName = "seq_house_id", allocationSize = 1)
public class House extends BaseEntity implements Serializable {

    private static final long serialVersionUID = 1L;
    @Id
    @Basic(optional = false)
    @Column(name = "id")
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_house_id")
    private Long id;
    @Basic(optional = false)
    @Column(name = "house_number")
    private String houseNumber;
    
    @Basic(optional = false)
    @Column(name = "house_type")
    private int houseType;
    
    @Column(name = "block_id")
    private Long blockId;
    
    @Column(name = "tenant_id")
    private Long tenantId;
    
    @Column(name = "landlord_id")
    private Long landlordId;
    
    @JoinColumn(name = "tenant_id", referencedColumnName = "id", insertable = false, updatable = false)
    @ManyToOne(optional = false)
    private Person tenant;
    
    @JoinColumn(name = "landlord_id", referencedColumnName = "id", insertable = false, updatable = false)
    @ManyToOne(optional = false)
    private Person landlord;
    
    @JoinColumn(name = "block_id", referencedColumnName = "id", insertable = false, updatable = false)
    @ManyToOne(optional = false)
    private Block block;

    @OneToMany(cascade = CascadeType.ALL, mappedBy = "houseId")
    private List<Receivable> receivableList;
    @OneToMany(cascade = CascadeType.ALL, mappedBy = "houseId")
    private List<Income> incomeList;
    
    private transient HouseType houseTypeEn;

    public House() {
    }

    public House(Long id) {
        this.id = id;
    }

    public House(Long id, String houseNumber, int houseType) {
        this.id = id;
        this.houseNumber = houseNumber;
        this.houseType = houseType;
    }

    public Long getId() {
        return id;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getHouseNumber() {
        return houseNumber;
    }

    public void setHouseNumber(String houseNumber) {
        this.houseNumber = houseNumber;
    }

    public int getHouseType() {
        return houseType;
    }

    public void setHouseType(int houseType) {
        this.houseType = houseType;
    }

    public List<Receivable> getReceivableList() {
        return receivableList;
    }

    public void setReceivableList(List<Receivable> receivableList) {
        this.receivableList = receivableList;
    }

    public Long getBlockId() {
        return blockId;
    }

    public void setBlockId(Long blockId) {
        this.blockId = blockId;
    }

    public Long getTenantId() {
        return tenantId;
    }

    public void setTenantId(Long tenantId) {
        this.tenantId = tenantId;
    }

    public Long getLandlordId() {
        return landlordId;
    }

    public void setLandlordId(Long landlordId) {
        this.landlordId = landlordId;
    }

    public Person getTenant() {
        return tenant;
    }

    public void setTenant(Person tenant) {
        this.tenant = tenant;
    }

    public Person getLandlord() {
        return landlord;
    }

    public void setLandlord(Person landlord) {
        this.landlord = landlord;
    }

    public Block getBlock() {
        return block;
    }

    public void setBlock(Block block) {
        this.block = block;
    }

    public List<Income> getIncomeList() {
        return incomeList;
    }

    public void setIncomeList(List<Income> incomeList) {
        this.incomeList = incomeList;
    }

    public HouseType getHouseTypeEn() {
        if (houseTypeEn == null) {
            houseTypeEn = HouseType.find(houseType);
        }
        return houseTypeEn;
    }

    public void setHouseTypeEn(HouseType houseTypeEn) {
        this.houseTypeEn = houseTypeEn;
        this.houseType = houseTypeEn.getType();
    }
    
    @Override
    public int hashCode() {
        int hash = 0;
        hash += (id != null ? id.hashCode() : 0);
        return hash;
    }

    @Override
    public boolean equals(Object object) {
        // TODO: Warning - this method won't work in the case the id fields are not set
        if (!(object instanceof House)) {
            return false;
        }
        House other = (House) object;
        if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id))) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "com.hasanunlukilinc.sms.entities.House[ id=" + id + " ]";
    }

}
