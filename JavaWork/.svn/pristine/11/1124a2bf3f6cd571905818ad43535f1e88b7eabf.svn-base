package com.hasanunlukilinc.sms.entities;

import java.io.Serializable;
import java.util.Date;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.NamedQueries;
import javax.persistence.NamedQuery;
import javax.persistence.SequenceGenerator;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

import com.hasanunlukilinc.sms.enums.ReportType;


/**
*@author Dilber Iyidiker
*/
@Entity
@Table(name = "report_permission")
@NamedQueries({@NamedQuery(name = "ReportPermission.findAll", query = "SELECT rp FROM ReportPermission rp")})
@SequenceGenerator(name = "seq_reportpermission_id", sequenceName = "seq_reportpermission_id", allocationSize = 1)
public class ReportPermission extends BaseEntity implements Serializable
{

	private static final long	serialVersionUID	= 1L;

	@Id
	@Basic(optional = false)
	@GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "seq_reportpermission_id")
	@Column(name = "id")
	private Long				id;

	@Basic(optional = false)
	@Column(name = "permission")
	private boolean				permission;


	@Basic(optional = false)
	@Column(name = "period")
	@Temporal(TemporalType.DATE)
	private Date				period;
	
	@Basic(optional = false)
	@Column(name = "apartment_id")
	private Long				apartmentId;

	@Basic(optional = false)
	@Column(name = "report_type")
	private Integer				reportType;

	@JoinColumn(name = "apartment_id", referencedColumnName = "id", insertable = false, updatable = false)
	@ManyToOne(optional = false, fetch = FetchType.LAZY)
	private Apartment			apartment;
	
	private transient ReportType reportTypeEn; 
	
	public Long getId()
	{
		return id;
	}

	public void setId(Long id)
	{
		this.id = id;
	}

	public boolean isPermission()
	{
		return permission;
	}

	public void setPermission(boolean permission)
	{
		this.permission = permission;
	}

	public Long getApartmentId()
	{
		return apartmentId;
	}

	public void setApartmentId(Long apartmentId)
	{
		this.apartmentId = apartmentId;
	}

	public Integer getReportType()
	{
		return reportType;
	}
	
	public void setReportType(Integer reportType)
	{
		this.reportType = reportType;
	}
	
	public Apartment getApartment()
	{
		return apartment;
	}
	
	public void setApartment(Apartment apartment)
	{
		this.apartment = apartment;
	}
	
	public Date getPeriod() {
		return period;
	}
	
	public void setPeriod(Date period) {
		this.period = period;
	}
	
	public ReportType getReportTypeEn()
	{
		if (reportTypeEn == null)
		{
			reportTypeEn = ReportType.find(reportType);
		}
		return reportTypeEn;
	}

	public void setReportTypeEn(ReportType reportTypeEn)
	{
		this.reportTypeEn = reportTypeEn;
		this.reportType   = reportTypeEn.getType();
	}
	

	@Override
	public boolean equals(Object object)
	{
		// TODO: Warning - this method won't work in the case the id fields are not set
		if (!(object instanceof ReportPermission))
		{
			return false;
		}
		ReportPermission other = (ReportPermission)object;
		if ((this.id == null && other.id != null) || (this.id != null && !this.id.equals(other.id)))
		{
			return false;
		}
		return true;
	}

	@Override
	public String toString()
	{
		return "com.hasanunlukilinc.sms.entities.ReportPermission{" + "id=" + id + '}';
	}

	public String getAppLogMessages()
	{
		return "Apartman Id : " + apartmentId + "Rapor Tipi : " + ReportType.find(reportType).getTypeName() +
				"Yetki : " + permission;
	}
}
